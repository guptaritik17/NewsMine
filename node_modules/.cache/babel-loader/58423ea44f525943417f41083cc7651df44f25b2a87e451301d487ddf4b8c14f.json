{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gupta\\\\Desktop\\\\Web D\\\\newsmine\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './Newsitem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport NavBar from './Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = ({\n  country = 'in',\n  pageSize = 8,\n  category = 'general',\n  apiKey,\n  setProgress,\n  showBookmarks\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [bookmarkedArticles, setBookmarkedArticles] = useState(() => {\n    const savedBookmarks = localStorage.getItem('bookmarkedArticles');\n    return savedBookmarks ? JSON.parse(savedBookmarks) : [];\n  });\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    setProgress(10);\n    const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=${apiKey}&page=${page}&pageSize=${pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    setProgress(30);\n    let parsedData = await data.json();\n    setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    setProgress(100);\n  };\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(category)} - NewsMine`;\n    updateNews();\n    // eslint-disable-next-line\n  }, [category, country, apiKey, pageSize]);\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=${apiKey}&page=${page + 1}&pageSize=${pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n  const handleBookmark = article => {\n    setBookmarkedArticles(prev => {\n      const isBookmarked = prev.some(item => item.url === article.url);\n      const updatedBookmarks = isBookmarked ? prev.filter(item => item.url !== article.url) : [...prev, article];\n      localStorage.setItem('bookmarkedArticles', JSON.stringify(updatedBookmarks));\n      return updatedBookmarks;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"NewsMine - Top \", capitalizeFirstLetter(category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), !showBookmarks ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: element.title ? element.title : '',\n              description: element.description ? element.description : '',\n              imageUrl: element.urlToImage,\n              newsUrl: element.url,\n              author: element.author,\n              date: element.publishedAt,\n              source: element.source.name,\n              onBookmark: () => handleBookmark(element),\n              isBookmarked: bookmarkedArticles.some(item => item.url === element.url)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)\n          }, element.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: bookmarkedArticles.length > 0 ? 'Bookmarked Articles' : 'No Bookmarked Articles Found'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), bookmarkedArticles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: bookmarkedArticles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {\n            toggleShowBookmarks: toggleShowBookmarks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(NewsItem, {\n            title: article.title,\n            description: article.description,\n            imageUrl: article.urlToImage,\n            newsUrl: article.url,\n            author: article.author,\n            date: article.publishedAt,\n            source: article.source.name,\n            onBookmark: () => handleBookmark(article),\n            isBookmarked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this)]\n        }, article.url, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"UinfmrG+PV3TXZBzvJQp3Tpt7tE=\");\n_c = News;\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string,\n  apiKey: PropTypes.string.isRequired,\n  setProgress: PropTypes.func.isRequired,\n  showBookmarks: PropTypes.bool.isRequired\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","News","country","pageSize","category","apiKey","setProgress","showBookmarks","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","bookmarkedArticles","setBookmarkedArticles","savedBookmarks","localStorage","getItem","JSON","parse","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","url","data","fetch","parsedData","json","document","title","fetchMoreData","concat","handleBookmark","article","prev","isBookmarked","some","item","updatedBookmarks","filter","setItem","stringify","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","description","imageUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","onBookmark","Navbar","toggleShowBookmarks","_c","propTypes","number","isRequired","func","bool","$RefreshReg$"],"sources":["C:/Users/gupta/Desktop/Web D/newsmine/src/components/News.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NewsItem from './Newsitem';\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport NavBar from './Navbar';\r\nconst News = ({ country = 'in', pageSize = 8, category = 'general', apiKey, setProgress, showBookmarks }) => {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [bookmarkedArticles, setBookmarkedArticles] = useState(() => {\r\n        const savedBookmarks = localStorage.getItem('bookmarkedArticles');\r\n        return savedBookmarks ? JSON.parse(savedBookmarks) : [];\r\n    });\r\n\r\n    const capitalizeFirstLetter = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    };\r\n\r\n    const updateNews = async () => {\r\n        setProgress(10);\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=${apiKey}&page=${page}&pageSize=${pageSize}`;\r\n        setLoading(true);\r\n        let data = await fetch(url);\r\n        setProgress(30);\r\n        let parsedData = await data.json();\r\n        setProgress(70);\r\n        setArticles(parsedData.articles);\r\n        setTotalResults(parsedData.totalResults);\r\n        setLoading(false);\r\n        setProgress(100);\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = `${capitalizeFirstLetter(category)} - NewsMine`;\r\n        updateNews();\r\n        // eslint-disable-next-line\r\n    }, [category, country, apiKey, pageSize]);\r\n\r\n    const fetchMoreData = async () => {\r\n        const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=${apiKey}&page=${page + 1}&pageSize=${pageSize}`;\r\n        setPage(page + 1);\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n        setArticles(articles.concat(parsedData.articles));\r\n        setTotalResults(parsedData.totalResults);\r\n    };\r\n\r\n    const handleBookmark = (article) => {\r\n        setBookmarkedArticles((prev) => {\r\n            const isBookmarked = prev.some((item) => item.url === article.url);\r\n            const updatedBookmarks = isBookmarked\r\n                ? prev.filter((item) => item.url !== article.url)\r\n                : [...prev, article];\r\n            localStorage.setItem('bookmarkedArticles', JSON.stringify(updatedBookmarks));\r\n            return updatedBookmarks;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center\" style={{ margin: '35px 0px', marginTop: '90px' }}>\r\n                NewsMine - Top {capitalizeFirstLetter(category)} Headlines\r\n            </h1>\r\n            {loading && <Spinner />}\r\n            {!showBookmarks ? (\r\n                <InfiniteScroll\r\n                    dataLength={articles.length}\r\n                    next={fetchMoreData}\r\n                    hasMore={articles.length !== totalResults}\r\n                    loader={<Spinner />}\r\n                >\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            {articles.map((element) => (\r\n                                <div className=\"col-md-4\" key={element.url}>\r\n                                    <NewsItem\r\n                                        title={element.title ? element.title : ''}\r\n                                        description={element.description ? element.description : ''}\r\n                                        imageUrl={element.urlToImage}\r\n                                        newsUrl={element.url}\r\n                                        author={element.author}\r\n                                        date={element.publishedAt}\r\n                                        source={element.source.name}\r\n                                        onBookmark={() => handleBookmark(element)}\r\n                                        isBookmarked={bookmarkedArticles.some((item) => item.url === element.url)}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </InfiniteScroll>\r\n            ) : (\r\n                <div className=\"container\">\r\n                    <h2 className=\"text-center\">\r\n                        {bookmarkedArticles.length > 0 ? 'Bookmarked Articles' : 'No Bookmarked Articles Found'}\r\n                    </h2>\r\n                    {bookmarkedArticles.length > 0 && (\r\n                        <div className=\"row\">\r\n                            {bookmarkedArticles.map((article) => (\r\n                                <div className=\"col-md-4\" key={article.url}>\r\n                                    <Navbar toggleShowBookmarks={toggleShowBookmarks} />\r\n\r\n                                    <NewsItem\r\n                                        title={article.title}\r\n                                        description={article.description}\r\n                                        imageUrl={article.urlToImage}\r\n                                        newsUrl={article.url}\r\n                                        author={article.author}\r\n                                        date={article.publishedAt}\r\n                                        source={article.source.name}\r\n                                        onBookmark={() => handleBookmark(article)}\r\n                                        isBookmarked={true}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nNews.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n    apiKey: PropTypes.string.isRequired,\r\n    setProgress: PropTypes.func.isRequired,\r\n    showBookmarks: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default News;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}